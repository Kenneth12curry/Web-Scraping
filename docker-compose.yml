version: '3.8'
services:
  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PORT: '3306'
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql

  backend:
    build: ./backend
    ports:
      - "8080:8080"
    volumes:
      - ./backend/logs:/app/logs
    depends_on:
      - db
    environment:
      FLASK_ENV: development
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      SENTRY_DSN: ${SENTRY_DSN}
      GROQ_API_KEY: ${GROQ_API_KEY}
      SCRAPEDO_API_KEY: ${SCRAPEDO_API_KEY}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      RESET_TOKEN_SECRET: ${RESET_TOKEN_SECRET}
      FRONTEND_URL: http://localhost:3000
      MYSQL_HOST: db # Utiliser le nom du service Docker pour la connexion
      MYSQL_PORT: 3306 # Sp√©cifier le port interne du service db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_HOST: redis # Utiliser le nom du service Docker pour la connexion
      REDIS_PORT: 6379
      REDIS_DB: 0

  frontend:
    build: ./frontend-react
    ports:
      - "3000:80"
    depends_on:
      - backend

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  mysql_data:
  redis_data: